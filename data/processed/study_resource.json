[
  {
    "text": "Start with CS50 Harvard's Introduction to Computer Science. Watch each lecture weekly, complete problem sets, and use the official notes for revision. Supplement with interactive platforms like Codecademy or freeCodeCamp to practice programming basics in C and Python. https://example.com/exams/cs101",
    "keywords": [
      "Introduction to Computer Science",
      "CS50",
      "Harvard",
      "lectures",
      "problem sets",
      "notes",
      "revision",
      "Codecademy",
      "freeCodeCamp",
      "programming basics",
      "C",
      "Python",
      "exam link",
      "study material"
    ]
  },
  {
    "text": "Begin by reading 'Introduction to Algorithms' (CLRS) alongside solving problems on LeetCode. Watch visual tutorials on YouTube (e.g., Abdul Bariâ€™s playlist). Focus weekly on one data structure or algorithm and implement it in code. https://example.com/exams/dsa",
    "keywords": [
      "Data Structures",
      "Algorithms",
      "Introduction to Algorithms",
      "CLRS",
      "LeetCode",
      "tutorials",
      "YouTube",
      "Abdul Bari",
      "implement code",
      "exam link",
      "study material"
    ]
  },
  {
    "text": "Follow the book 'Database System Concepts' by Silberschatz. Start with relational models, then move to SQL queries. Practice with MySQL or PostgreSQL. Use DB diagram tools for ER modeling exercises. https://example.com/exams/db",
    "keywords": [
      "Database Systems",
      "Database System Concepts",
      "Silberschatz",
      "relational models",
      "SQL queries",
      "MySQL",
      "PostgreSQL",
      "DB diagram tools",
      "ER modeling",
      "exam link",
      "study material"
    ]
  },
  {
    "text": "Use 'Modern Operating Systems' by Tanenbaum. Study one module per week (e.g., processes, threads, memory). Simulate OS concepts using tools like OS Simulator or writing simple process schedulers in C. https://example.com/exams/os",
    "keywords": [
      "Operating Systems",
      "Modern Operating Systems",
      "Tanenbaum",
      "processes",
      "threads",
      "memory",
      "OS concepts",
      "simulate",
      "OS Simulator",
      "process schedulers",
      "C",
      "exam link",
      "study material"
    ]
  },
  {
    "text": "Read 'Computer Networking: A Top-Down Approach' by Kurose. Follow with Packet Tracer labs to simulate networking setups. Use NPTEL or Cisco tutorials for hands-on labs. https://example.com/exams/networks",
    "keywords": [
      "Computer Networks",
      "Computer Networking: A Top-Down Approach",
      "Kurose",
      "Packet Tracer",
      "labs",
      "simulate",
      "networking setups",
      "NPTEL",
      "Cisco",
      "tutorials",
      "hands-on labs",
      "exam link",
      "study material"
    ]
  },
  {
    "text": "Start with Sommerville's 'Software Engineering'. Study software development life cycles, UML diagrams, and Agile principles. Practice by managing a small project using tools like Trello and GitHub. https://example.com/exams/se",
    "keywords": [
      "Software Engineering",
      "Sommerville",
      "software development life cycles",
      "SDLC",
      "UML diagrams",
      "Agile principles",
      "project management",
      "Trello",
      "GitHub",
      "exam link",
      "study material"
    ]
  },
  {
    "text": "Begin with HTML/CSS on freeCodeCamp, then move to JavaScript. Practice with simple projects (e.g., portfolio website). Study responsive design using MDN Docs and frameworks like Bootstrap. https://example.com/exams/web",
    "keywords": [
      "Web Development",
      "HTML",
      "CSS",
      "JavaScript",
      "freeCodeCamp",
      "projects",
      "portfolio website",
      "responsive design",
      "MDN Docs",
      "Bootstrap",
      "frameworks",
      "exam link",
      "study material"
    ]
  },
  {
    "text": "Follow 'AI: A Modern Approach' for concepts. Take the Stanford AI course online. Focus on search algorithms, logic, and machine learning basics. Apply knowledge by building small AI games or agents. https://example.com/exams/ai",
    "keywords": [
      "Artificial Intelligence",
      "AI",
      "AI: A Modern Approach",
      "Stanford AI course",
      "online course",
      "search algorithms",
      "logic",
      "machine learning basics",
      "AI games",
      "AI agents",
      "exam link",
      "study material"
    ]
  },
  {
    "text": "Start with Andrew Ng's ML course on Coursera. Practice with scikit-learn on small datasets. Learn concepts like overfitting, bias-variance, and model evaluation using hands-on notebooks. https://example.com/exams/ml",
    "keywords": [
      "Machine Learning",
      "ML",
      "Andrew Ng",
      "Coursera",
      "scikit-learn",
      "datasets",
      "overfitting",
      "bias-variance",
      "model evaluation",
      "notebooks",
      "exam link",
      "study material"
    ]
  },
  {
    "text": "Begin with 'Kali Linux Revealed' for penetration testing. Follow up with Cybrary modules on ethical hacking. Practice on platforms like TryHackMe or Hack The Box. Cover encryption and secure protocols. https://example.com/exams/cybersecurity",
    "keywords": [
      "Cybersecurity",
      "Kali Linux Revealed",
      "penetration testing",
      "Cybrary",
      "ethical hacking",
      "TryHackMe",
      "Hack The Box",
      "encryption",
      "secure protocols",
      "exam link",
      "study material"
    ]
  }
]